# Generated by Django 5.2.7 on 2025-10-25 01:42

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_terminal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
                'unique_together': {('latitude', 'longitude')},
            },
        ),
        migrations.CreateModel(
            name='RestStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rest_type', models.CharField(choices=[('30_min', '30-Minute Break'), ('10_hour', '10-Hour Rest'), ('34_hour', '34-Hour Restart'), ('sleeper_berth', 'Sleeper Berth')], max_length=20)),
                ('planned_start', models.DateTimeField()),
                ('planned_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_required', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rest_stops', to='trip_planner.location')),
            ],
            options={
                'verbose_name': 'Rest Stop',
                'verbose_name_plural': 'Rest Stops',
                'db_table': 'rest_stops',
                'ordering': ['planned_start'],
            },
        ),
        migrations.CreateModel(
            name='RouteSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estimated_drive_time', models.DurationField()),
                ('actual_drive_time', models.DurationField(blank=True, null=True)),
                ('sequence', models.PositiveIntegerField()),
                ('is_completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_from', to='trip_planner.location')),
                ('to_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_to', to='trip_planner.location')),
            ],
            options={
                'verbose_name': 'Route Segment',
                'verbose_name_plural': 'Route Segments',
                'db_table': 'route_segments',
                'ordering': ['trip', 'sequence'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_name', models.CharField(max_length=200)),
                ('planned_start_time', models.DateTimeField()),
                ('planned_end_time', models.DateTimeField()),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('total_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('estimated_drive_time', models.DurationField(blank=True, null=True)),
                ('actual_drive_time', models.DurationField(blank=True, null=True)),
                ('hours_used_before_trip', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('70.00'))])),
                ('hours_available', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('70.00'))])),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_trips', to='trip_planner.location')),
            ],
            options={
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
                'db_table': 'trips',
                'ordering': ['-created_at'],
            },
        ),
    ]
