# Generated by Django 5.1.13 on 2025-10-26 16:31

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core_utils", "0002_initial"),
        ("log_sheets", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ComplianceAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("violation", "Violation"),
                            ("approaching_limit", "Approaching Limit"),
                            ("restart_recommended", "Restart Recommended"),
                            ("team_coordination", "Team Coordination"),
                            ("compliance_score", "Compliance Score"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("action_required", models.BooleanField(default=False)),
                ("action_description", models.TextField(blank=True)),
                ("is_read", models.BooleanField(default=False)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_log_entry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_sheets.logentry",
                    ),
                ),
                (
                    "related_violation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_sheets.violation",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Compliance Alert",
                "verbose_name_plural": "Compliance Alerts",
                "db_table": "compliance_alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="HOSAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("log_entry_created", "Log Entry Created"),
                            ("log_entry_modified", "Log Entry Modified"),
                            ("log_entry_certified", "Log Entry Certified"),
                            ("violation_detected", "Violation Detected"),
                            ("violation_resolved", "Violation Resolved"),
                            ("restart_initiated", "Restart Initiated"),
                            ("team_handoff", "Team Handoff"),
                            ("rule_modified", "Rule Modified"),
                            ("compliance_calculated", "Compliance Calculated"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField()),
                ("details", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hos_audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_log_entry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_sheets.logentry",
                    ),
                ),
                (
                    "related_violation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_sheets.violation",
                    ),
                ),
            ],
            options={
                "verbose_name": "HOS Audit Log",
                "verbose_name_plural": "HOS Audit Logs",
                "db_table": "hos_audit_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="HOSRuleConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rule_id", models.CharField(max_length=50, unique=True)),
                ("rule_name", models.CharField(max_length=100)),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("driving_limit", "Driving Limit"),
                            ("on_duty_limit", "On Duty Limit"),
                            ("break_requirement", "Break Requirement"),
                            ("cycle_limit", "Cycle Limit"),
                            ("restart_requirement", "Restart Requirement"),
                            ("sleeper_berth", "Sleeper Berth"),
                            ("custom", "Custom Rule"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("minor", "Minor"),
                            ("major", "Major"),
                            ("critical", "Critical"),
                        ],
                        default="major",
                        max_length=10,
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                ("parameters", models.JSONField(default=dict)),
                ("applies_to_cycle_types", models.JSONField(default=list)),
                ("applies_to_duty_statuses", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "HOS Rule Configuration",
                "verbose_name_plural": "HOS Rule Configurations",
                "db_table": "hos_rule_configurations",
            },
        ),
        migrations.CreateModel(
            name="SleeperBerthPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_hours",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01")),
                            django.core.validators.MaxValueValidator(Decimal("24.00")),
                        ],
                    ),
                ),
                ("is_valid_for_restart", models.BooleanField(default=False)),
                (
                    "consecutive_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("24.00")),
                        ],
                    ),
                ),
                ("split_berth_period", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sleeper_berth_periods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "log_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sleeper_berth_period",
                        to="log_sheets.logentry",
                    ),
                ),
                (
                    "related_period",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core_utils.sleeperberthperiod",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sleeper Berth Period",
                "verbose_name_plural": "Sleeper Berth Periods",
                "db_table": "sleeper_berth_periods",
            },
        ),
        migrations.CreateModel(
            name="TeamDriving",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("team_id", models.CharField(max_length=50, unique=True)),
                (
                    "current_driver",
                    models.CharField(
                        choices=[
                            ("driver_1", "Driver 1"),
                            ("driver_2", "Driver 2"),
                            ("relief_driver", "Relief Driver"),
                        ],
                        default="driver_1",
                        max_length=20,
                    ),
                ),
                ("handoff_time", models.DateTimeField(blank=True, null=True)),
                ("handoff_location", models.CharField(blank=True, max_length=200)),
                ("coordination_notes", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_driver_1",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "driver_2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_driver_2",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Driving",
                "verbose_name_plural": "Team Driving",
                "db_table": "team_driving",
            },
        ),
        migrations.CreateModel(
            name="UserNotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable email notifications"
                    ),
                ),
                (
                    "push_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable push notifications"
                    ),
                ),
                (
                    "sms_enabled",
                    models.BooleanField(
                        default=False, help_text="Enable SMS notifications"
                    ),
                ),
                (
                    "in_app_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable in-app notifications"
                    ),
                ),
                (
                    "notification_preferences",
                    models.JSONField(
                        default=dict,
                        help_text="JSON structure defining notification type preferences",
                    ),
                ),
                (
                    "quiet_hours_enabled",
                    models.BooleanField(default=False, help_text="Enable quiet hours"),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        default="22:00:00",
                        help_text="Start time for quiet hours (HH:MM:SS)",
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        default="06:00:00",
                        help_text="End time for quiet hours (HH:MM:SS)",
                    ),
                ),
                (
                    "sound_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable notification sounds"
                    ),
                ),
                (
                    "vibration_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable device vibration"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Notification Preference",
                "verbose_name_plural": "User Notification Preferences",
            },
        ),
        migrations.CreateModel(
            name="ViolationWorkflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_review", "In Review"),
                            ("resolved", "Resolved"),
                            ("disputed", "Disputed"),
                            ("escalated", "Escalated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "escalation_level",
                    models.IntegerField(
                        choices=[
                            (0, "No Escalation"),
                            (1, "Supervisor"),
                            (2, "Manager"),
                            (3, "Director"),
                            (4, "Executive"),
                        ],
                        default=0,
                    ),
                ),
                ("resolution_notes", models.TextField(blank=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_violations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "violation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow",
                        to="log_sheets.violation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Violation Workflow",
                "verbose_name_plural": "Violation Workflows",
                "db_table": "violation_workflows",
            },
        ),
        migrations.CreateModel(
            name="ComplianceAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                ("total_violations", models.IntegerField(default=0)),
                ("violations_by_type", models.JSONField(default=dict)),
                ("violations_by_severity", models.JSONField(default=dict)),
                (
                    "compliance_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                (
                    "cycle_efficiency",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                (
                    "restart_frequency",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "average_daily_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("24.00")),
                        ],
                    ),
                ),
                ("risk_factors", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Compliance Analytics",
                "verbose_name_plural": "Compliance Analytics",
                "db_table": "compliance_analytics",
                "unique_together": {("driver", "period_start", "period_end")},
            },
        ),
    ]
